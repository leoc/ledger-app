<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js"></script>
<%
  now = Date.today
  force_now = false
  month = (force_now || params[:month].to_s == "") ? Date.new(now.year, now.month, 1) : params[:month]
  year = (force_now || params[:year].to_s == "") ? Date.new(now.year, 1, 1) : params[:year]
  date_eq = "xtn_year = '#{year}'"
%>

<% @query = query do %>
      with months as (
        select
          x,
          xtn_date,
          date_trunc('year', xtn_date) as xtn_year
        from (
          select
            x,
            (select min(xtn_month) from ledger where account ~ '<%= Constants::CURRENT_ACCOUNTS %>') + (x || ' months')::interval as xtn_date
           from
             generate_series(0,120) x
        ) x
      ),
      assets as (
        select
          xtn_date,
          xtn_month,
          xtn_year,
          amount
        from
          ledger
        where
          account ~ '<%= Constants::CURRENT_ACCOUNTS %>'
        order by
          xtn_date,
          amount
      )
      select
        xtn_month as "Month",
        starting as "Starting",
        cash_in as "Cash In",
        cash_out as "Cash Out",
        cash_in + cash_out as "Net",
        ending as "Ending",
        fund_balance as "Fund Balance",
        ending - fund_balance as "Available Cash"
      from (
        select
          months.xtn_date::date as xtn_month,
          months.xtn_year::date as xtn_year,
          coalesce((select sum(amount) from assets where xtn_date < months.xtn_date),0) as starting,
          coalesce((select sum(case when amount > 0 then amount else 0 end) from assets where xtn_date between months.xtn_date and (months.xtn_date + '1 month'::interval) - '1 day'::interval), 0) as cash_in,
          coalesce((select sum(case when amount < 0 then amount else 0 end) from assets where xtn_date between months.xtn_date and (months.xtn_date + '1 month'::interval) - '1 day'::interval), 0) as cash_out,
          coalesce((select sum(amount) from assets where xtn_date <= (months.xtn_date + '1 month'::interval) - '1 day'::interval), 0) as ending,
          coalesce((select sum(amount) from ledger where account ~ 'Assets:Funds' and ledger.xtn_month <= months.xtn_date),0) as fund_balance
        from
          months
        where
          xtn_date + '1 month'::interval <= date_trunc('month', now()::date) + '1 month'::interval
      ) x
      where <%= date_eq %>
<% end %>

<%
  chart_data = {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    datasets: [
      {
        type: 'line',
        label: 'Net Worth',
        borderColor: "#ff0000",
        borderWidth: 2,
	pointBackgroundColor: '#ff0000',
        fill: false,
	lineTension: 0, 
        data: @query.rows.map{ |a| a[5].value.to_i }
      }, {
        type: 'line',
        label: 'Fund Balance',
        borderColor: "#008800",
        borderWidth: 2,
        fill: false,
	pointBackgroundColor: '#008800',
	lineTension: 0, 
        data: @query.rows.map{ |a| a[6].value.to_i }
      }, {
        type: 'bar',
        label: 'In',
        backgroundColor: '#008800',
        data: @query.rows.map{ |a| a[2].value.to_i },
        borderColor: 'white',
        borderWidth: 2
      }, {
        type: 'bar',
        label: 'Out',
        backgroundColor: '#880000',
        data: @query.rows.map{ |a| -1 * a[3].value.to_i },
        borderColor: 'white',
        borderWidth: 2,
	width: 5
      }
    ]
  }
  puts @query.rows.map{ |a| a[5].value.to_i }.inspect
%>

<canvas id="myChart" width="400" height="100"></canvas>
<script>
var ctx = document.getElementById("myChart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'bar',
    data: <%= chart_data.to_json %>,
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>

<%
  puts @query.inspect
%>
<div class="row">
  <div class="col-md-12">
    <h4>Income</h4>
    <div class="table-responsive">
      <%= table @query %>
    </div>
  </div>
</div>
